{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\n\nfunction DzmtAutocompletePlaneComponent_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const street_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", street_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", street_r2, \" \");\n  }\n}\n\nexport class DzmtAutocompletePlaneComponent {\n  constructor() {\n    this.control = new FormControl();\n    this.streets = ['Champs-Élysées', 'Lombard Street', 'Abbey Road', 'Fifth Avenue'];\n  }\n\n  ngOnInit() {\n    this.filteredStreets = this.control.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\n  }\n\n  _filter(value) {\n    const filterValue = this._normalizeValue(value);\n\n    return this.streets.filter(street => this._normalizeValue(street).includes(filterValue));\n  }\n\n  _normalizeValue(value) {\n    return value.toLowerCase().replace(/\\s/g, '');\n  }\n\n}\n\nDzmtAutocompletePlaneComponent.ɵfac = function DzmtAutocompletePlaneComponent_Factory(t) {\n  return new (t || DzmtAutocompletePlaneComponent)();\n};\n\nDzmtAutocompletePlaneComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DzmtAutocompletePlaneComponent,\n  selectors: [[\"app-dzmt-autocomplete-plane\"]],\n  decls: 6,\n  vars: 5,\n  consts: [[1, \"example-form\"], [\"type\", \"text\", \"placeholder\", \"Search for a street\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function DzmtAutocompletePlaneComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵelement(1, \"input\", 1);\n      i0.ɵɵelementStart(2, \"mat-autocomplete\", null, 2);\n      i0.ɵɵtemplate(4, DzmtAutocompletePlaneComponent_mat_option_4_Template, 2, 2, \"mat-option\", 3);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.control)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 3, ctx.filteredStreets));\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkem10LWF1dG9jb21wbGV0ZS1wbGFuZS5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["D:\\Learning\\Graduation Project\\Graduation Project 2\\Angular-Zenix-v1.0_15_September_2021\\package\\src\\app\\material\\dzmt-autocomplete\\dzmt-autocomplete-plane\\dzmt-autocomplete-plane.component.ts","D:\\Learning\\Graduation Project\\Graduation Project 2\\Angular-Zenix-v1.0_15_September_2021\\package\\src\\app\\material\\dzmt-autocomplete\\dzmt-autocomplete-plane\\dzmt-autocomplete-plane.component.html"],"names":[],"mappings":"AACA,SAAQ,WAAR,QAA0B,gBAA1B;AAEA,SAAQ,SAAR,EAAmB,GAAnB,QAA6B,gBAA7B;;;;;ACGI,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,YAAA,EAAA,CAAA;AACE,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACF,IAAA,EAAA,CAAA,YAAA;;;;;AAF2D,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA;AACzD,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,SAAA,EAAA,GAAA;;;;ADKN,OAAM,MAAO,8BAAP,CAAqC;AAEzC,EAAA,WAAA,GAAA;AAEA,SAAA,OAAA,GAAU,IAAI,WAAJ,EAAV;AACA,SAAA,OAAA,GAAoB,CAAC,gBAAD,EAAmB,gBAAnB,EAAqC,YAArC,EAAmD,cAAnD,CAApB;AAHiB;;AAMjB,EAAA,QAAQ,GAAA;AACN,SAAK,eAAL,GAAuB,KAAK,OAAL,CAAa,YAAb,CAA0B,IAA1B,CACrB,SAAS,CAAC,EAAD,CADY,EAErB,GAAG,CAAC,KAAK,IAAI,KAAK,OAAL,CAAa,KAAb,CAAV,CAFkB,CAAvB;AAID;;AAEO,EAAA,OAAO,CAAC,KAAD,EAAc;AAC3B,UAAM,WAAW,GAAG,KAAK,eAAL,CAAqB,KAArB,CAApB;;AACA,WAAO,KAAK,OAAL,CAAa,MAAb,CAAoB,MAAM,IAAI,KAAK,eAAL,CAAqB,MAArB,EAA6B,QAA7B,CAAsC,WAAtC,CAA9B,CAAP;AACD;;AAEO,EAAA,eAAe,CAAC,KAAD,EAAc;AACnC,WAAO,KAAK,CAAC,WAAN,GAAoB,OAApB,CAA4B,KAA5B,EAAmC,EAAnC,CAAP;AACD;;AAtBwC;;;mBAA9B,8B;AAA8B,C;;;QAA9B,8B;AAA8B,EAAA,SAAA,EAAA,CAAA,CAAA,6BAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,C;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,aAAA,EAAA,qBAAA,EAAA,CAAA,EAAA,aAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,uCAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACZ3C,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA;AAIA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,IAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,oDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA;;AAGF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;;;;;;AAPS,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,OAAA,EAAuB,iBAAvB,EAAuB,GAAvB;AAG0B,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,eAAA,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {startWith, map} from 'rxjs/operators';\n\n\n\n@Component({\n  selector: 'app-dzmt-autocomplete-plane',\n  templateUrl: './dzmt-autocomplete-plane.component.html',\n  styleUrls: ['./dzmt-autocomplete-plane.component.css']\n})\nexport class DzmtAutocompletePlaneComponent implements OnInit {\n\n  constructor() { }\n\n  control = new FormControl();\n  streets: string[] = ['Champs-Élysées', 'Lombard Street', 'Abbey Road', 'Fifth Avenue'];\n  filteredStreets!: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredStreets = this.control.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = this._normalizeValue(value);\n    return this.streets.filter(street => this._normalizeValue(street).includes(filterValue));\n  }\n\n  private _normalizeValue(value: string): string {\n    return value.toLowerCase().replace(/\\s/g, '');\n  }\n\n}\n","<form class=\"example-form\">\n  <input type=\"text\"\n         placeholder=\"Search for a street\"\n         [formControl]=\"control\"\n         [matAutocomplete]=\"auto\">\n  <mat-autocomplete #auto=\"matAutocomplete\">\n    <mat-option *ngFor=\"let street of filteredStreets | async\" [value]=\"street\">\n      {{street}}\n    </mat-option>\n  </mat-autocomplete>\n</form>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}